docker.enabled    = true
singularity.autoMounts = true
apptainer.autoMounts = true
apptainer.runOptions = "--home /tmp/home"
nextflow.enable.moduleBinaries = true

includeConfig 'config/base.config'

workDir = "/fs5/p_masi/fitbir/nextflow/work"

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g) -v /fs5/p_masi/fitbir:/fs5/p_masi/fitbir'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    no_symlink {
        params.publish_dir_mode = 'copy'
    }
    slurm {
        process {
            maxRetries          = 1
            cache               = "lenient"
            afterScript         = "sleep 60"
        }

        executor {
            name                = 'slurm'
            queueSize           = 1000
            queueGlobalStatus   = false
            queueStatInterval   = '3 min'
            submitRateLimit     = '10/1sec'
            exitReadTimeout     = '30 min'
            pollInterval        = '30 sec'
            jobName             = {
                task.name
                    .replace("[", "(")
                    .replace("]", ")")
                    .replace(" ", "_")
            }
        }
    }
}

// Global default params, used in configs
params {
    input = false
    outdir = '/fs5/p_masi/fitbir/nextflow/outputs'
    trace_report_suffix = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
    freesurfer_license = '/home-local/saundam1/freesurfer/license.txt' // Must be provided
    use_gpu = false

    // PREPROC_T1 options
    preproc_t1_run_denoising    = false
    preproc_t1_run_N4           = true
    preproc_t1_run_resampling   = true
    preproc_t1_run_synthbet     = true
    preproc_t1_run_ants_bet     = false
    preproc_t1_run_crop         = false
}

process {
    publishDir = [
        path: { "${params.outdir}/${meta.id}/${task.process.replaceAll(':', '-')}" },
        mode: 'copy',
        overwrite: true
    ]

    withName: 'PREPROC_N4' {
        cpus                        = 8

        ext.prefix                  = null
        ext.b0threshold             = 51
        ext.nb_voxels_between_knots = null
        ext.shrink_factor           = null
        ext.maxiter                 = 100
        ext.miniter                 = 50
        ext.retain                  = null
        ext.mask                    = null
    }

    withName: "IO_READBIDS" {
        publishDir = [
            path: { "${params.outdir}/${task.process.replaceAll(':', '-')}" },
            mode: 'copy',
        ]
        ext.relativize = false
    }
    withName: 'IMAGE_RESAMPLE' {
        ext.prefix              = null
        ext.suffix              = null
        ext.reference           = null
        ext.voxel_size          = 1
        ext.volume_size         = null
        ext.iso_min             = null
        ext.interp              = "cubic"
        ext.f                   = true
        ext.enforce_dimensions  = false
    }

    withName: 'UTILS_EXTRACTB0' {
        ext.prefix                  = null
        ext.b0_extraction_strategy  = null
        ext.b0_threshold            = 51
        ext.output_series           = false
    }

    withName: 'REGISTRATION_ANTS' {
        cpus = 8

        ext.prefix = null
        ext.suffix = null
        ext.suffix_qc = null
        ext.quick = false
        ext.dimension = 3
        ext.transform = "s"
        ext.random_seed = 1234
        ext.run_qc = false
        ext.threads = 8
        ext.initial_transform = null
        ext.histogram_bins = null
        ext.spline_distance = null
        ext.gradient_step = null
        ext.mask = null
        ext.type = null
        ext.histogram_matching = false
        ext.repro_mode = null
        ext.collapse_output = false
    }

    withName: 'REGISTRATION_ANTSAPPLYTRANSFORMS*' {
        ext.prefix = null
        ext.suffix = null
        ext.suffix_qc = null
        ext.output_dtype = null
        ext.dimensionality = null
        ext.image_type = null
        ext.interpolation = "NearestNeighbor"
        ext.default_val = null
        ext.run_qc = false
    }

    withName: 'BETCROP_SYNTHBET' {
        ext.prefix  = null
        ext.gpu     = false
        ext.border  = null
        ext.nocsf   = true
        ext.weights = null
        containerOptions = { 
            params.use_gpu ?
                ( workflow.containerEngine == "singularity" ? '--nv' :
                ( workflow.containerEngine == "docker" ? '--gpus \'"device=1,2"\'' : null )
                ) : null
        }
    }

    withName: 'RECONST_FREEWATER' {
        ext.prefix = null
        ext.para_diff = null
        ext.perp_diff_min = null
        ext.perp_diff_max = null
        ext.iso_diff = null
        ext.lambda1 = null
        ext.lambda2 = null
        ext.nb_threads = 4
        ext.b_thr = 51
        ext.kernels = false
        ext.mask = true
        ext.compute_only = false
    }

    withName: 'RECONST_DTIMETRICS' {
        ext.prefix = null
        ext.dwi_shell_tolerance = 51
        ext.max_dti_shell_value = 1500
        ext.b0_thr_extract_b0 = 51
        ext.dti_shells = null
        ext.run_qc = false

        ext.ad = true
        ext.evecs = false
        ext.evals = false
        ext.fa = true
        ext.ga = true
        ext.rgb = true
        ext.md = true
        ext.mode = false
        ext.norm = false
        ext.rd = true
        ext.tensor = true
        ext.nonphysical = false
        ext.pulsation = false
        ext.residual = false
    }

    withName: 'RECONST_FRF' {
        ext.prefix = null
        ext.fa = null
        ext.fa_min = null
        ext.nvox_min = null
        ext.roi_radius = null
        ext.dwi_shell_tolerance = 51
        ext.max_dti_shell_value = 5000
        ext.min_fodf_shell_value = 100
        ext.b0_thr_extract_b0 = 51
        ext.dti_shells = null
        ext.fodf_shells = null
        ext.method = "ssst"
        ext.precision = null

        ext.fa_thr_wm = null
        ext.fa_thr_gm = null
        ext.fa_thr_csf = null
        ext.md_thr_wm = null
        ext.md_thr_gm = null
        ext.md_thr_csf = null

        ext.manual_frf = null
        ext.manual_wm_frf = null
        ext.manual_gm_frf = null
        ext.manual_csf_frf = null

        ext.mask = true
        ext.mask_wm = null
        ext.mask_gm = null
        ext.mask_csf = null
    }


    withName: 'RECONST_FODF' {
        ext.prefix = null
        ext.dwi_shell_tolerance = 51
        ext.min_fodf_shell_value = 100
        ext.b0_thr_extract_b0 = 51
        ext.fodf_shells = null
        ext.sh_order = 8
        ext.sh_basis = "descoteaux07_legacy" // BundleParc requires this basis!
        ext.method = "ssst"
        ext.processes = 6
        ext.mask = true
        ext.relative_threshold = null
        ext.fodf_metrics_a_factor = 2.0
        ext.fa_threshold = null
        ext.md_threshold = null
        ext.absolute_peaks = false

        ext.wm_fodf = false
        ext.gm_fodf = false
        ext.csf_fodf = false
        ext.vf = false
        ext.vf_rgb = false

        ext.peaks = true
        ext.peak_values = false
        ext.peak_indices = false
        ext.afd_max = false
        ext.afd_total = false
        ext.afd_sum = false
        ext.nufo = false
        ext.ventricles_mask = false
    }

    withName: 'SEGMENTATION_SYNTHSEG' {
        cpus = 4
        
        ext.prefix = null
        ext.gpu = false
        ext.gm_parc = false
        ext.robust = false
        ext.fast = false
        ext.ct = false
        ext.output_resample = false
        ext.output_volume = true
        ext.output_qc_score = false
        ext.crop = false
        ext.posteriors = false
        containerOptions = { 
            params.use_gpu ?
                ( workflow.containerEngine == "singularity" ? '--nv' :
                ( workflow.containerEngine == "docker" ? '--gpus \'"device=1,2"\'' : null )
                ) : null
        }
    }

    withName: "ML_BUNDLEPARC" {
        ext.out_prefix = null
        ext.half_precision = false
        ext.bundles = null
        ext.checkpoint = null
        ext.nb_pts = null
        ext.mm = null
        ext.continuous = false
        ext.min_blob_size = 50
        ext.keep_biggest_blob = false
        ext.f = true
        containerOptions = { 
            params.use_gpu ?
                ( workflow.containerEngine == "singularity" ? '--nv' :
                ( workflow.containerEngine == "docker" ? '--gpus \'"device=1,2"\'' : null )
                ) : null
        }
    }

    withName: "STATS_METRICSINROI" {
        ext.suffix = null
        ext.bin = true
        ext.normalize_weights = null
        ext.use_label = false
    }
}

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'docker.io'
docker.registry       = 'docker.io'
podman.registry       = 'quay.io'
singularity.registry  = 'docker.io'
charliecloud.registry = 'quay.io'

// Load igenomes.config if required
// includeConfig !params.igenomes_ignore ? 'conf/igenomes.config' : 'conf/igenomes_ignored.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'MASILab/nf-neuro-fitbir'
    contributors    = [
        [
            name: 'Adam Saunders',
            affiliation: 'Vanderbilt University',
            email: 'adam.m.saunders@vanderbilt.edu',
            github: '@saundersresearch',
            contribution: ['author'],
            orcid: 'https://orcid.org/0000-0003-2912-9759'
        ],
    ]

    homePage        = 'https://github.com/MASILab/nf-neuro-fitbir'
    description     = """nf-neuro-fitbir is a Nextflow pipeline for processing TBI data."""
    mainScript      = 'main.nf'
    defaultBranch   = 'main'
    nextflowVersion = '!>=24.10.0'
    version         = ''
    doi             = ''
}
